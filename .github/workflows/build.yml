---
name: ros-container-builder
on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main
    paths-ignore:
      - 'README.md'
      - 'LICENSE'
      - '.github/workflows/build.yml'
      - '.github/workflows/arm64-build.yml'
  schedule:
    - cron: '0 0 * * 0'
  workflow_dispatch:

env:
  MY_IMAGE_NAME: "${{ github.event.repository.name }}"
  MY_IMAGE_DESC: "ROS2 Docker Container for amd64"
  MY_IMAGE_NAME_ARM: "${{ github.event.repository.name }}-arm64"
  MY_IMAGE_DESC_ARM: "ROS2 Docker Container for arm64"
  IMAGE_REGISTRY: "ghcr.io/${{ github.repository_owner }}"

jobs:
  build_push_amd64:
    name: Build and push amd64 image
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      - name: Check disk space
        run: df -h
       
      - name: Delete huge unnecessary tools folder
        run: rm -rf /opt/hostedtoolcach

      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Generate Tags
        id: generate_tags
        shell: bash
        run: |
          TIMESTAMP="$(date +%Y%m%d)"
          COMMIT_TAGS=()
          BUILD_TAGS=()

          # Have tags for tracking builds during pull request
          SHA_SHORT="${GITHUB_SHA::7}"
          COMMIT_TAGS+=("pr-${{ github.event.number }}")
          COMMIT_TAGS+=("${SHA_SHORT}")

          # Append matching timestamp tags to keep a version history
          for TAG in "${BUILD_TAGS[@]}"; do
              BUILD_TAGS+=("${TAG}-${TIMESTAMP}")
          done

          BUILD_TAGS+=("${TIMESTAMP}")
          BUILD_TAGS+=("latest")

          if [[ "${{ github.event_name }}" == "pull_request" ]]; then
              echo "Generated the following commit tags: "
              for TAG in "${COMMIT_TAGS[@]}"; do
                  echo "${TAG}"
              done

              alias_tags=("${COMMIT_TAGS[@]}")
          else
              alias_tags=("${BUILD_TAGS[@]}")
          fi

          echo "Generated the following build tags: "
          for TAG in "${BUILD_TAGS[@]}"; do
              echo "${TAG}"
          done

          echo "alias_tags=${alias_tags[*]}" >> $GITHUB_OUTPUT
      
      - name: Image Metadata
        uses: docker/metadata-action@v5
        id: meta
        with:
          images: |
            ${{ env.MY_IMAGE_NAME }}

          labels: |
            io.artifacthub.package.readme-url=https://raw.githubusercontent.com/${{ github.repository }}/main/README.md
            org.opencontainers.image.description=${{ env.MY_IMAGE_DESC }}
            org.opencontainers.image.title=${{ env.MY_IMAGE_NAME }}
      
      - name: Build Image
        id: build_image
        uses: redhat-actions/buildah-build@v2
        with:
          containerfiles: |
            ./amd64/Containerfile
          image: ${{ env.MY_IMAGE_NAME }}
          tags: ${{ steps.generate_tags.outputs.alias_tags }}
          labels: ${{ steps.meta.outputs.labels }}
          oci: true

      - name: Lowercase Registry
        id: lowercase_registry
        uses: ASzc/change-string-case-action@v6
        with:
          string: ${{ env.IMAGE_REGISTRY }}
      
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Push Image
        uses: redhat-actions/push-to-registry@v2
        id: push_image
        env:
          REGISTRY_USER: ${{ github.actor }}
          REGISTRY_PASSWORD: ${{ secrets.GITHUB_TOKEN }}
        with:
          image: ${{ steps.build_image.outputs.image }}
          tags: ${{ steps.build_image.outputs.tags }}
          registry: ${{ steps.lowercase_registry.outputs.lowercase }}
          username: ${{ env.REGISTRY_USER }}
          password: ${{ env.REGISTRY_PASSWORD }}
          extra-args: |
            --disable-content-trust
      
      - uses: sigstore/cosign-installer@v3.5.0
        if: github.event_name != 'pull_request'
      
      - name: Sign Image
        if: github.event_name != 'pull_request'
        run: |
          cosign sign -y --key env://COSIGN_PRIVATE_KEY ${{ steps.lowercase_registry.outputs.lowercase }}/${{ steps.build_image.outputs.image }}@${TAGS}
        env:
          COSIGN_PRIVATE_KEY: ${{ secrets.SIGNING_SECRET }}
          TAGS: ${{ steps.push_image.outputs.digest }}
          COSIGN_EXPERIMENTAL: false

  build_push_arm64:
    if: false
    name: Build and push arm64 image
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Generate Tags
        id: generate_tags
        shell: bash
        run: |
          TIMESTAMP="$(date +%Y%m%d)"
          COMMIT_TAGS=()
          BUILD_TAGS=()

          # Have tags for tracking builds during pull request
          SHA_SHORT="${GITHUB_SHA::7}"
          COMMIT_TAGS+=("pr-${{ github.event.number }}")
          COMMIT_TAGS+=("${SHA_SHORT}")

          # Append matching timestamp tags to keep a version history
          for TAG in "${BUILD_TAGS[@]}"; do
              BUILD_TAGS+=("${TAG}-${TIMESTAMP}")
          done

          BUILD_TAGS+=("${TIMESTAMP}")

          if [[ "${{ github.event_name }}" == "pull_request" ]]; then
              echo "Generated the following commit tags: "
              for TAG in "${COMMIT_TAGS[@]}"; do
                  echo "${TAG}"
              done

              alias_tags=("${COMMIT_TAGS[@]}")
          else
              alias_tags=("${BUILD_TAGS[@]}")
          fi

          echo "Generated the following build tags: "
          for TAG in "${BUILD_TAGS[@]}"; do
              echo "${TAG}"
          done

          echo "alias_tags=${alias_tags[*]}" >> $GITHUB_OUTPUT
      
      - name: Image Metadata
        uses: docker/metadata-action@v5
        id: meta
        with:
          images: |
            ${{ env.MY_IMAGE_NAME_ARM }}

          labels: |
            io.artifacthub.package.readme-url=https://raw.githubusercontent.com/${{ github.repository }}/main/README.md
            org.opencontainers.image.description=${{ env.MY_IMAGE_DESC_ARM }}
            org.opencontainers.image.title=${{ env.MY_IMAGE_NAME_ARM }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: linux/arm64
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build Action
        id: build_action
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./arm64//Containerfile
          platforms: linux/arm64
          push: true
          tags: |
            ${{ env.IMAGE_REGISTRY }}/${{ env.MY_IMAGE_NAME_ARM }}:latest
            ${{ env.IMAGE_REGISTRY }}/${{ env.MY_IMAGE_NAME_ARM }}:${{ steps.generate_tags.outputs.alias_tags }}
      
      - name: Lowercase Registry
        id: lowercase_registry
        uses: ASzc/change-string-case-action@v6
        with:
          string: ${{ env.IMAGE_REGISTRY }}
      
      - uses: sigstore/cosign-installer@v3.5.0
        if: github.event_name != 'pull_request'
      
      - name: Sign Image
        if: github.event_name != 'pull_request'
        run: |
          cosign sign -y --key env://COSIGN_PRIVATE_KEY ${{ steps.lowercase_registry.outputs.lowercase }}/${{ env.MY_IMAGE_NAME_ARM }}:${TAGS}
        env:
          COSIGN_PRIVATE_KEY: ${{ secrets.SIGNING_SECRET }}
          TAGS: latest
          COSIGN_EXPERIMENTAL: false
